#!/usr/bin/env node

var nopt   = require('nopt'),
    tty    = require('tty'),
    Vault  = require('../lib/vault'),
    Config = require('../lib/vault/config'),
    
    options = { 'config': Boolean,
                'phrase': String,
                'length': Number,
                'lower':  Boolean,
                'upper':  Boolean,
                'alpha':  Boolean,
                'number': Boolean,
                'space':  Boolean,
                'dash':   Boolean,
                'symbol': Boolean
              },
    
    shorts  = { 'c': '--config',
                'p': '--phrase',
                'l': '--length'
              },
    
    params  = nopt(options, shorts),
    service = params.argv.remain[0];


if (params.config) {
  delete params.config;
  
  Config.edit(function(settings) {
    if (service) {
      settings.services[service] = settings.services[service] || {};
      settings = settings.services[service];
    }
    
    for (var key in params) {
      if (typeof params[key] !== 'object')
        settings[key] = params[key];
    }
  }, function(error) {
    if (error) console.error('Error writing file: ' + configPath);
    process.exit(error ? 1 : 0);
  });

} else {
  Vault.extend(params, Config.read(service));
  
  if (params.phrase === undefined) {
    console.error('Passphrase is not defined; pass `-p PHRASE` or run `vault -cp PHRASE`');
    process.exit(1);
  }

  if (service === undefined) {
    console.error('Service is undefined');
    process.exit(1);
  }

  var vault    = new Vault(params),
      password = vault.generate(service);
  
  process.stdout.write(password);
  if (tty.isatty(1)) process.stdout.write('\n');
  process.exit(0);
}

